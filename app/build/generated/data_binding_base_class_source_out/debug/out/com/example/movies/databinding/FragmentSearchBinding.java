// Generated by view binder compiler. Do not edit!
package com.example.movies.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.movies.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSearchBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final ImageView btnFilter;

  @NonNull
  public final EditText edtSearch;

  @NonNull
  public final ConstraintLayout hintConstraint;

  @NonNull
  public final ImageView imageSearchNull;

  @NonNull
  public final RecyclerView mainItemSearch;

  @NonNull
  public final ConstraintLayout searchWrapper;

  @NonNull
  public final ConstraintLayout title1;

  @NonNull
  public final TextView title1Textview;

  @NonNull
  public final ConstraintLayout title2;

  @NonNull
  public final TextView tvSearchNull1;

  @NonNull
  public final TextView tvSearchNull2;

  @NonNull
  public final TextView tvSearchNull3;

  @NonNull
  public final TextView tvSearchNull4;

  private FragmentSearchBinding(@NonNull FrameLayout rootView, @NonNull ImageView btnFilter,
      @NonNull EditText edtSearch, @NonNull ConstraintLayout hintConstraint,
      @NonNull ImageView imageSearchNull, @NonNull RecyclerView mainItemSearch,
      @NonNull ConstraintLayout searchWrapper, @NonNull ConstraintLayout title1,
      @NonNull TextView title1Textview, @NonNull ConstraintLayout title2,
      @NonNull TextView tvSearchNull1, @NonNull TextView tvSearchNull2,
      @NonNull TextView tvSearchNull3, @NonNull TextView tvSearchNull4) {
    this.rootView = rootView;
    this.btnFilter = btnFilter;
    this.edtSearch = edtSearch;
    this.hintConstraint = hintConstraint;
    this.imageSearchNull = imageSearchNull;
    this.mainItemSearch = mainItemSearch;
    this.searchWrapper = searchWrapper;
    this.title1 = title1;
    this.title1Textview = title1Textview;
    this.title2 = title2;
    this.tvSearchNull1 = tvSearchNull1;
    this.tvSearchNull2 = tvSearchNull2;
    this.tvSearchNull3 = tvSearchNull3;
    this.tvSearchNull4 = tvSearchNull4;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnFilter;
      ImageView btnFilter = ViewBindings.findChildViewById(rootView, id);
      if (btnFilter == null) {
        break missingId;
      }

      id = R.id.edt_Search;
      EditText edtSearch = ViewBindings.findChildViewById(rootView, id);
      if (edtSearch == null) {
        break missingId;
      }

      id = R.id.hintConstraint;
      ConstraintLayout hintConstraint = ViewBindings.findChildViewById(rootView, id);
      if (hintConstraint == null) {
        break missingId;
      }

      id = R.id.imageSearchNull;
      ImageView imageSearchNull = ViewBindings.findChildViewById(rootView, id);
      if (imageSearchNull == null) {
        break missingId;
      }

      id = R.id.mainItemSearch;
      RecyclerView mainItemSearch = ViewBindings.findChildViewById(rootView, id);
      if (mainItemSearch == null) {
        break missingId;
      }

      id = R.id.searchWrapper;
      ConstraintLayout searchWrapper = ViewBindings.findChildViewById(rootView, id);
      if (searchWrapper == null) {
        break missingId;
      }

      id = R.id.title1;
      ConstraintLayout title1 = ViewBindings.findChildViewById(rootView, id);
      if (title1 == null) {
        break missingId;
      }

      id = R.id.title1_Textview;
      TextView title1Textview = ViewBindings.findChildViewById(rootView, id);
      if (title1Textview == null) {
        break missingId;
      }

      id = R.id.title2;
      ConstraintLayout title2 = ViewBindings.findChildViewById(rootView, id);
      if (title2 == null) {
        break missingId;
      }

      id = R.id.tvSearchNull1;
      TextView tvSearchNull1 = ViewBindings.findChildViewById(rootView, id);
      if (tvSearchNull1 == null) {
        break missingId;
      }

      id = R.id.tvSearchNull2;
      TextView tvSearchNull2 = ViewBindings.findChildViewById(rootView, id);
      if (tvSearchNull2 == null) {
        break missingId;
      }

      id = R.id.tvSearchNull3;
      TextView tvSearchNull3 = ViewBindings.findChildViewById(rootView, id);
      if (tvSearchNull3 == null) {
        break missingId;
      }

      id = R.id.tvSearchNull4;
      TextView tvSearchNull4 = ViewBindings.findChildViewById(rootView, id);
      if (tvSearchNull4 == null) {
        break missingId;
      }

      return new FragmentSearchBinding((FrameLayout) rootView, btnFilter, edtSearch, hintConstraint,
          imageSearchNull, mainItemSearch, searchWrapper, title1, title1Textview, title2,
          tvSearchNull1, tvSearchNull2, tvSearchNull3, tvSearchNull4);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
