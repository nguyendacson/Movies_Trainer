// Generated by view binder compiler. Do not edit!
package com.example.movies.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.movies.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemSearchBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final CardView imagePoster;

  @NonNull
  public final ImageView itemImage;

  @NonNull
  public final TextView numberStar;

  @NonNull
  public final TextView textNameMovie;

  @NonNull
  public final ConstraintLayout titleMain;

  @NonNull
  public final TextView tvCalendar;

  @NonNull
  public final TextView tvClock;

  @NonNull
  public final TextView tvTicket;

  private ItemSearchBinding(@NonNull FrameLayout rootView, @NonNull CardView imagePoster,
      @NonNull ImageView itemImage, @NonNull TextView numberStar, @NonNull TextView textNameMovie,
      @NonNull ConstraintLayout titleMain, @NonNull TextView tvCalendar, @NonNull TextView tvClock,
      @NonNull TextView tvTicket) {
    this.rootView = rootView;
    this.imagePoster = imagePoster;
    this.itemImage = itemImage;
    this.numberStar = numberStar;
    this.textNameMovie = textNameMovie;
    this.titleMain = titleMain;
    this.tvCalendar = tvCalendar;
    this.tvClock = tvClock;
    this.tvTicket = tvTicket;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemSearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemSearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemSearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imagePoster;
      CardView imagePoster = ViewBindings.findChildViewById(rootView, id);
      if (imagePoster == null) {
        break missingId;
      }

      id = R.id.itemImage;
      ImageView itemImage = ViewBindings.findChildViewById(rootView, id);
      if (itemImage == null) {
        break missingId;
      }

      id = R.id.numberStar;
      TextView numberStar = ViewBindings.findChildViewById(rootView, id);
      if (numberStar == null) {
        break missingId;
      }

      id = R.id.textNameMovie;
      TextView textNameMovie = ViewBindings.findChildViewById(rootView, id);
      if (textNameMovie == null) {
        break missingId;
      }

      id = R.id.titleMain;
      ConstraintLayout titleMain = ViewBindings.findChildViewById(rootView, id);
      if (titleMain == null) {
        break missingId;
      }

      id = R.id.tvCalendar;
      TextView tvCalendar = ViewBindings.findChildViewById(rootView, id);
      if (tvCalendar == null) {
        break missingId;
      }

      id = R.id.tvClock;
      TextView tvClock = ViewBindings.findChildViewById(rootView, id);
      if (tvClock == null) {
        break missingId;
      }

      id = R.id.tvTicket;
      TextView tvTicket = ViewBindings.findChildViewById(rootView, id);
      if (tvTicket == null) {
        break missingId;
      }

      return new ItemSearchBinding((FrameLayout) rootView, imagePoster, itemImage, numberStar,
          textNameMovie, titleMain, tvCalendar, tvClock, tvTicket);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
